//music21 CPP Copyright 2022 George Charles Rosar II
//exceptions21.cpp
#include "exceptions21.h"


Exception::Exception(String theMessageIn) {
    theExceptionMessage = theMessageIn;
}

void Exception::throwException(String theMessageIn) {
    theExceptionMessage = theMessageIn;
    objectThrowsException = true;
}

void Exception::terminateException() {
    objectThrowsException = false;
}

ImmutableStreamException::ImmutableStreamException(String messageIn) {
    this->throwException(messageIn);
}




Music21Exception::Music21Exception(String messageIn) : Exception(messageIn) {

}


StreamException::StreamException(String messageIn) : Music21Exception(messageIn) {
    
}

MetadataException::MetadataException(String messageIn) : Music21Exception(messageIn) {
    
}

AnalysisException::AnalysisException(String messageIn) : Music21Exception(messageIn) {

}

TreeException::TreeException(String messageIn) : Music21Exception(messageIn) {

}

InstrumentException::InstrumentException(String messageIn) : Music21Exception(messageIn) {

}

Music21CommonException::Music21CommonException(String messageIn) : Music21Exception(messageIn) {

}

CorpusException::CorpusException(String messageIn) : Music21Exception(messageIn) {

}

GroupException::GroupException(String messageIn) : Music21Exception(messageIn) {

}

MeterException::MeterException(String messageIn) : Music21Exception(messageIn) {

}

TimeSignatureException::TimeSignatureException(String messageIn) : Music21Exception(messageIn) {

}

Music21DeprecationWarning::Music21DeprecationWarning(String messageIn) : Music21Exception(messageIn) {

}
/*
# -*- coding: utf-8 -*-
# ------------------------------------------------------------------------------
# Name:         exceptions21.py
# Purpose:      music21 Exceptions (called out to not require import music21 to access)
#
# Authors:      Michael Scott Asato Cuthbert
#
# Copyright:    Copyright Â© 2012 Michael Scott Asato Cuthbert and the music21 Project
# License:      BSD, see license.txt
# ------------------------------------------------------------------------------
'''
module to hold exceptions generated by music21, particularly the ``Music21Exception``
which all other m21 exceptions should derive from.
Do not import anything within this module.  Needs to be import free so other modules
can freely import from it.
'''
# This one is a very general exception that is here because it's very general

class Music21Exception(Exception):
    pass

# The rest of these are here because they are imported by more than one module
# which cannot import the other module because of circular imports.
#
# if Circular imports have not been a problem and/or you don't plan to use
# an exception in multiple modules (i.e., you're not going to catch a particular
# exception in a different module, then define that exception in the module itself
# (e.g., ClefException is defined in clef) ).


class StreamException(Music21Exception):
    pass

class ImmutableStreamException(StreamException):
    def __init__(self, msg='An immutable Stream cannot be changed'):  # pylint: disable=useless-super-delegation
        super().__init__(msg)


class MetadataException(Music21Exception):
    pass

class AnalysisException(Music21Exception):
    pass

class TreeException(Music21Exception):
    pass

class InstrumentException(Music21Exception):
    pass

class Music21CommonException(Music21Exception):
    pass

class CorpusException(Music21Exception):
    pass

# should be renamed because what does Group mean here? and it's "base.Groups" not "base.Group".
class GroupException(Music21Exception):
    pass


class MeterException(Music21Exception):
    pass


class TimeSignatureException(MeterException):
    pass


# warnings
class Music21DeprecationWarning(UserWarning):
    # Do not subclass Deprecation warning, because these
    # warnings need to be passed to users...
    pass
*/